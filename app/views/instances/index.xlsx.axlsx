wb = xlsx_package.workbook

wb.styles do |style|

  # definizione della formattazione per tipi di dati particolari
  @date_cell = style.add_style(format_code: "dd/mm/yyy")
  @date_time_cell = style.add_style(format_code: "dd/mm/yyy hh:mm:ss")
  @integer_cell = style.add_style(format_code: "#0")
  @text_cell = style.add_style(format_code: "@")

  def stile(tipo)
    case tipo
      when 'intero'
        @integer_cell
      when 'telefono'
        @text_cell
      when 'data'
        @date_cell
      else
        nil
    end
  end

  # aggiunta di un nuovo foglio di lavoro
  wb.add_worksheet(name: @entity.plurale.truncate(30)) do |sheet|

    # creazione della riga di intestazione
    intestazioni = []
    collegata = {} # hash per le entity collegate
    @entity.properties.order(:ordine).each do |property|
      if property.tipo == 'select'
        # esplodiamo la tabella collegata
        parametri = property.condizioni.split(',')
        tabella = parametri[0]

        ent = Entity.find_by! slug: tabella
        collegata[property.id] = ent # salviamo l'entity per non doverla ricaricare a ogni riga

        visibili = ent.properties
        visibili = visibili.where("riservata = ?", false) if !current_user.admin?

        if visibili.count > 1
          visibili.order(:ordine).each do |prop|
            intestazioni.push property.nome + ': ' + prop.nome if prop.tipo!='select' # per ora non esportiamo select nidificate
          end
        else
          intestazioni.push property.nome
        end
      elsif property.tipo == 'utente'
        ent = Entity.find_by! slug: 'profilo'
        collegata[property.id] = ent

        if ent.properties.count > 1
          ent.properties.order(:ordine).each do |prop|
            intestazioni.push property.nome + ': ' + prop.nome if prop.tipo!='select' # per ora non esportiamo select nidificate
          end
        else
          intestazioni.push property.nome
        end
      else
        intestazioni.push property.nome
      end
    end

    if current_user.admin?
      intestazioni.push "Creato da"
      intestazioni.push "Appartenenza"
      intestazioni.push "Ultima modifica"
    end

    sheet.add_row intestazioni

    # creazione delle righe di dati
    @instances.each do |instance|
      # prepariamo due array che conterranno i dati da passare al momento della creazione della riga:
      # uno per i dati, uno per la formattazione
      dati = []
      stili = []

      @entity.properties.order(:ordine).each do |property|
        dato = Datum.find_by instance_id: instance.id, property_id: property.id
        valore = dato ? dato.valore : ''

        case property.tipo
          when 'intero'
            dati.push valore
            stili.push stile property.tipo
          when 'telefono'
            dati.push valore
            stili.push stile property.tipo
          when 'utente'
            instce = instance.user.profilo

            # esplodiamo i dati della tabella collegata
            ent = collegata[property.id]

            ent.properties.order(:ordine).each do |prop|
              if prop.tipo!='select' # per ora non esportiamo select nidificate
                if instce
                  val = Datum.where(instance_id: instce.id, property_id: prop.id).first
                  if val
                    dati.push val.valore
                  else
                    dati.push ''
                  end
                else
                  dati.push ''
                end
                stili.push stile prop.tipo
              end
            end
          when 'select'
            instce = Instance.where("id = ?", valore).first

            # esplodiamo i dati della tabella collegata
            ent = collegata[property.id]

            visibili = ent.properties
            visibili = visibili.where("riservata = ?", false) if !current_user.admin?

            visibili.order(:ordine).each do |prop|

              if prop.tipo!='select' # per ora non esportiamo select nidificate
                if instce
                  val = Datum.where( instance_id: instce.id, property_id: prop.id ).first
                  if val
                    dati.push val.valore
                  else
                    dati.push ''
                  end
                else
                  dati.push ''
                end
                stili.push stile prop.tipo
              end
            end

          when 'data'
            dati.push valore # Date::strptime(valore, "%Y-%m-%d")
            stili.push stile property.tipo
          else
            dati.push valore
            stili.push stile property.tipo
        end
      end

      if current_user.admin?
        if instance.user
          dati.push instance.user.email
          stili.push nil

          dati.push instance.user.appartenenza
          stili.push nil
        else
          # l'utente che ha creato l'istanza potrebbe essere stato rimosso
          dati.push ''
          stili.push nil

          dati.push ''
          stili.push nil
        end

        dati.push instance.updated_at
        stili.push @date_time_cell
      end

      sheet.add_row dati, style: stili
    end
  end

end
